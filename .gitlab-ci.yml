stages:
  - dependencies
  - build
  - package

before_script:
  - export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)
  - >
    if [ -z "$CROSS_CLOUD_YML" ]; then
       if [ "$BASE_URL" == "https://gitlab.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/production/cross-cloud.yml"
       elif [ "$BASE_URL" == "https://gitlab.staging.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/staging/cross-cloud.yml"
       elif [ "$BASE_URL" == "https://gitlab.cidev.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/integration/cross-cloud.yml"
       else
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/master/cross-cloud.yml"
       fi
    else
      export CROSS_CLOUD_YML="$CROSS_CLOUD_YML"
    fi
  - >
    if [ "$CI_JOB_NAME" == "compile" ]; then
      source /opt/local/ubuntu/etc/rvmrc ; source /opt/local/ubuntu/etc/profile.d/rvm.sh ; cp -a --no-preserve=mode /opt/local/dashboard /dashboard ; pushd /dashboard ; source /opt/local/.env ; chmod +x ./bin/update_dashboard ; ./bin/update_dashboard ; popd
    else
      source /opt/local/etc/rvmrc ; source /opt/local/etc/profile.d/rvm.sh ; cp -a --no-preserve=mode /opt/local/dashboard /dashboard ; pushd /dashboard ; source /opt/local/.env ; chmod +x ./bin/update_dashboard ; ./bin/update_dashboard ; popd
    fi

baseimage:
  tags:
    - aufs
  image: crosscloudci/debian-docker
  stage: dependencies
  variables:
    LINUX_DISTRO: ubuntu
  script:
    - cd ./ci/build_container/
    - sed -i "1s|.*|FROM crosscloudci/ubuntu-xenial|" ./Dockerfile-ubuntu
    - CIRCLE_SHA1="$CI_COMMIT_REF_SLUG" IMAGE_NAME="$CI_REGISTRY_IMAGE/envoy-build-$LINUX_DISTRO" ./docker_build.sh
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker push "$CI_REGISTRY_IMAGE/envoy-build-$LINUX_DISTRO:$CI_COMMIT_REF_SLUG"
    # - >
    #   if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
    #     CIRCLE_SHA1="$CI_COMMIT_REF_SLUG" IMAGE_NAME="$CI_REGISTRY_IMAGE/envoy-build-$LINUX_DISTRO" ./docker_build.sh
    #     docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    #     docker push "$CI_REGISTRY_IMAGE/envoy-build-$LINUX_DISTRO:$CI_COMMIT_REF_SLUG"
    #   else
    #     echo "This is stable, skip aufs build"
    #     exit 0
    #   fi

# baseimage-overlayfs:
#   image: crosscloudci/debian-docker
#   stage: dependencies
#   tags:
#     - overlayfs
#   variables:
#     LINUX_DISTRO: ubuntu
#   script:
#     - cd ./ci/build_container/
#     - sed -i "1s|.*|FROM crosscloudci/ubuntu-xenial|" ./Dockerfile-ubuntu
#     - >
#       if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
#         echo "This is master, skip overlayfs build"
#         exit 0
#       else
#         sed -i 's/16.04.10/16.04.11/g' ./build_container_ubuntu.sh
#         CIRCLE_SHA1="$CI_COMMIT_REF_SLUG" IMAGE_NAME="$CI_REGISTRY_IMAGE/envoy-build-$LINUX_DISTRO" ./docker_build.sh
#         docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
#         docker push "$CI_REGISTRY_IMAGE/envoy-build-$LINUX_DISTRO:$CI_COMMIT_REF_SLUG"
#       fi

compile:
  tags:
    - aufs
  image: crosscloudci/debian-docker
  image: "$CI_REGISTRY_IMAGE/envoy-build-$LINUX_DISTRO:$CI_COMMIT_REF_SLUG"
  stage: build
  variables:
   LINUX_DISTRO: ubuntu
   BAZEL_EXTRA_TEST_OPTIONS: --test_env=ENVOY_IP_TEST_VERSIONS=v4only
  script:
    - mkdir /build
    - ln -s /builds/envoyproxy/envoy/ /source
    # - sed -i 's|bazel --batch test ${BAZEL_TEST_OPTIONS} -c opt //test/...|bazel --batch test ${BAZEL_TEST_OPTIONS} --test_env=ENVOY_IP_TEST_VERSIONS=v4only -c opt //test/...|g' ./ci/do_ci.sh
    - ./ci/do_ci.sh  bazel.release
    
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 5 weeks
    paths:
      - ./build_release_stripped/envoy

container:
  tags:
    - aufs
  image: crosscloudci/debian-docker
  stage: package
  image: crosscloudci/debian-docker 
  script:
    - IMAGE_TAG=${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHA_SHORT}.${CI_JOB_ID}
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --pull -f ci/Dockerfile-envoy-image -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker build --pull -f ci/Dockerfile-envoy-alpine -t "$CI_REGISTRY_IMAGE/alpine:$IMAGE_TAG" .
    - docker build --pull -f ci/Dockerfile-envoy-alpine-debug -t "$CI_REGISTRY_IMAGE/alpine-debug:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - echo export IMAGE_ARGS=\"--set image.repository=$CI_REGISTRY_IMAGE\" | tee release.env
    - echo export TAG_ARGS=\"--set image.tag=$IMAGE_TAG\" | tee -a release.env
    - cat release.env
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 5 weeks
    paths:
      - release.env
